#version: "3.8"

x-base_service: &base_service
  environment:
    - DISPLAY=${DISPLAY}
    - ROS_MASTER_URI=http://127.0.1.1:11311
    - ROS_IP=127.0.1.1
  volumes:
    - .:/run/detect
    - /tmp/.X11-unix:/tmp/.X11-unix
    - /dev/video0:/dev/video0
    - /dev:/dev
  network_mode: host

x-with-gpu: &with_gpu
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            count: 1
            capabilities: [ gpu ]

services:
  roscore:
    <<: *base_service
    image: arm64v8/ros:noetic-ros-core
    command: [ "roscore", "-v" ]

  bridge:
    <<: *base_service
    build:
      context: .
      dockerfile: ./bridge.Dockerfile
    profiles: [ "bridge" ]
    command: [ "rosrun", "foxglove_bridge", "foxglove_bridge" ]

  img_detect_gpu: &img_detect_gpu
    <<: [ *base_service, *with_gpu ]
    build:
      context: .
      dockerfile: ./detect/Dockerfile
    profiles: [ "gpu" ]
    command: [ "python3", "/run/detect/detect/detect_image.py", "-m", "/run/detect/best_1.pt" ]
    depends_on:
      - roscore
      - img_pub

  img_detect_cpu:
    <<: *img_detect_gpu
    build:
      context: .
      dockerfile: ./detect/Dockerfile
    profiles: [ "cpu" ]
    deploy: { }

  img_pub:
    <<: *base_service
    build:
      context: .
      dockerfile: ./camera/Dockerfile
    profiles: [ "webcam" ]
    privileged: true
#    command: [ "python3", "/run/detect/camera/img_pub.py", "-f", "/run/detect/videos/UW vs UCSD Group A BO2  _ 2022 RoboMaster University League North America.mp4" ]
    command: [ "python3", "/run/detect/camera/img_pub.py", "-f", "0" ]
    depends_on:
      - roscore

    #  realsense:
    #    <<: *base_service
    #    profiles: [ "realsense" ]
    #    build:
    #      context: .
    #      dockerfile: realsense/Dockerfile
    #    #      dockerfile: Dockerfile
    #    privileged: true
    #    stdin_open: true
    #    tty: true
    #    #    volumes:
    #    #      - /dev:/dev
    #    device_cgroup_rules:
    #      - 'c 81:* rmw'
    #      - 'c 189:* rmw'
    #    depends_on:
    #      - roscore
    #    command: [ "rs-enumerate-devices" ]
  #    command: [ "python3", "/run/detect/src/depth.py" ]
  #    command: ["realsense-viewer"]
  #    command: [ "roslaunch", "realsense2_camera", "rs_camera.launch", "filters", ":=", "pointcloud" ]
  #    command: ["ls", "-Al", "/dev/video0"]


  #  realsense-ready:
  #    container_name: realsense-2-container
  #    build:
  #      context: .
  #      dockerfile: realsense/Dockerfile
  #    restart: always
  #    privileged: true
  #    ports:
  #      - "8084:8084"
  #    environment:
  #      - DISPLAY=$DISPLAY
  #      - QT_X11_NO_MITSHM=1
  #    volumes:
  #      - /tmp/.X11-unix:/tmp/.X11-unix
  #      - ./app:/app:rw
  #      - /dev:/dev:ro
  #    stdin_open: true
  #    tty: true
  #
  #    deploy:
  #      resources:
  #        reservations:
  #          devices:
  #            - driver: nvidia
  #              device_ids: [ '0' ]
  #              capabilities: [ gpu ]


  #  detect_py: &automatic
  #    <<: [ *base_service, *with_gpu ]
  #    privileged: true
  #    profiles: [ "gpu" ]
  #
  #
  #  detect_py_cpu:
  #    <<: [ *base_service, *automatic ]
  #    privileged: true
  #    profiles: [ "cpu" ]
  #    deploy: { }
  #    environment:
  #      - CLI_ARGS=--no-half --precision full

